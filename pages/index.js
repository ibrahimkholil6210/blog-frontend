import { useEffect, useState } from "react";
import Head from "next/head";
import Link from "next/link";
import { useDispatch, useSelector } from "react-redux";
import { useRouter } from "next/router";
import styles from "../styles/Home.module.css";
import { Button } from "../components/Button";
import {
  selectAllPosts,
  fetchPostsAsync,
  selectTotalResult,
  selectLoading,
} from "../redux/slice/postSlice";
import Spinner from "../components/Spinner";

export default function Home() {
  const posts = useSelector(selectAllPosts);
  const totalResult = useSelector(selectTotalResult);
  const loading = useSelector(selectLoading);
  const dispatch = useDispatch();
  const limit = 10;
  const [currentPage, setCurrentPage] = useState(1);
  const router = useRouter();

  useEffect(() => {
    dispatch(fetchPostsAsync({ limit, offset: 0 }));
  }, []);

  const paginateData = (pageNumber) => {
    if (currentPage === pageNumber) return;
    setCurrentPage(pageNumber);
    dispatch(fetchPostsAsync({ limit, offset: (pageNumber - 1) * limit }));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Next Blog App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Next Blog</h1>

        <p className={styles.description}>
          Get started by reading and writing blogs.
        </p>

        <div className={styles.btnContainer}>
          <Button
            onClick={() => router.push("/create")}
            label="Create a new post"
          />
        </div>

        {loading && <Spinner />}

        {!loading && (
          <>
            <div className={styles.grid}>
              {posts?.map((post, id) => {
                return (
                  <Link href={`/post/${post?.id}`} key={id}>
                    <a className={styles.card}>
                      <h2>{post?.title} &rarr;</h2>
                      <p>
                        {`${post?.content.slice(0, 140)} ${
                          post?.content.length > 140 ? "..." : ""
                        }`}
                      </p>
                    </a>
                  </Link>
                );
              })}
            </div>
            <Pagination
              totalData={totalResult}
              listPerPage={limit}
              paginateData={paginateData}
              className={styles.pagination}
            />
          </>
        )}
      </main>

      <footer className={styles.footer}>
        &copy; All Rights Reserved - 2022
      </footer>
    </div>
  );
}

export const Pagination = ({ listPerPage, totalData, paginateData, className }) => {
  const pageNumbers = [];

  for (let i = 1; i <= Math.ceil(totalData / listPerPage); i++) {
    pageNumbers.push(i);
  }

  return (
    <div className={className}>
      {pageNumbers.map((page, index) => (
        <Button key={index} onClick={() => paginateData(page)} label={page} />
      ))}
    </div>
  );
};
