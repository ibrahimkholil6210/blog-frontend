import React from "react";
import Head from "next/head";
import * as Yup from "yup";
import { Formik, Form, Field } from "formik";
import axios from "../../lib/axios";
import { Button } from "../../components/Button";
import mainStyles from "../../styles/Main.module.css";
import GetBack from "../../components/GetBack";

const CreatePost = () => {
  const validationSchemas = Yup.object().shape({
    title: Yup.string().required("Title is required"),
    content: Yup.string().required("Content is required"),
    date: Yup.date().required("Date is required"),
  });

  const handleSubmit = async (values) => {
    try {
      console.log(values);
      const apiRes = await axios.post("/posts", {
        title: values.title,
        content: values.content,
        date: values.date,
      });
      console.log(apiRes);
    } catch (err) {
      console.log(err.message);
    }
  };

  return (
    <div className={mainStyles.container}>
      <Head>
        <title>Create | Next Blog App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={mainStyles.main}>
        <div className={mainStyles.minWidth}>
          <GetBack />
          <h1 className={mainStyles.title}>Create a new post</h1>
          <div className={mainStyles.inputContainer}>
            <Formik
              initialValues={{
                title: "",
                content: "",
                date: "",
              }}
              validationSchema={validationSchemas}
              onSubmit={handleSubmit}
            >
              {({ touched, errors }) => (
                <Form>
                  <div className={mainStyles.inputRow}>
                    <div className={mainStyles.label}>Title</div>
                    <Field name="title" />
                    {errors.title && touched.title ? (
                      <div className={mainStyles.errorMessage}>
                        {errors.title}
                      </div>
                    ) : null}
                  </div>
                  <div className={mainStyles.inputRow}>
                    <div className={mainStyles.label}>Content</div>
                    <Field name="content" as="textarea" />
                    {errors.content && touched.content ? (
                      <div className={mainStyles.errorMessage}>
                        {errors.content}
                      </div>
                    ) : null}
                  </div>
                  <div className={mainStyles.inputRow}>
                    <div className={mainStyles.label}>Date</div>
                    <Field name="date" type="date" />
                    {errors.date && touched.date ? (
                      <div className={mainStyles.errorMessage}>
                        {errors.date}
                      </div>
                    ) : null}
                  </div>
                  <div className={mainStyles.inputRow}>
                    <Button type="submit" label="Create" />
                  </div>
                </Form>
              )}
            </Formik>
          </div>
        </div>
      </main>
    </div>
  );
};

export default CreatePost;
