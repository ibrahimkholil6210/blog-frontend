import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import * as Yup from "yup";
import { Formik, Form, Field } from "formik";
import { Button } from "../../../components/Button";
import mainStyles from "../../../styles/Main.module.css";
import styles from "../../../styles/Post.module.css";
import axios from "../../../lib/axios";
import GetBack from "../../../components/GetBack";

const Post = () => {
  const router = useRouter();
  const validationSchemas = Yup.object().shape({
    name: Yup.string().required("Name is required"),
    comment: Yup.string().required("Comment is required"),
  });
  const [post, setPost] = useState({});
  const [loading, setLoading] = useState(false);

  const fetchPost = async (id) => {
    setLoading(true);
    const { data } = await axios.get(`/posts/${id}`);
    setPost(data?.post);
    setLoading(false);
  };

  useEffect(() => {
    console.log(router);
    if (!router.query.id) return;
    fetchPost(router.query.id);
  }, []);

  const handleSubmit = (values) => {
    console.log(values);
  };

  return (
    <div className={mainStyles.container}>
      <Head>
        <title>Post | Next Blog App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={mainStyles.main}>
        <div className={mainStyles.minWidth}>
          <GetBack />
          {loading ? (
            <h1 className={mainStyles.title}>Loading...</h1>
          ) : (
            <>
              <h1 className={mainStyles.title}>{post.title}</h1>
              <p>{post.content}</p>
            </>
          )}
          <div className={styles.commentContainer}>
            <div className={styles.titleCommentArea}>Add a Comment</div>
            <Formik
              initialValues={{
                name: "",
                comment: "",
              }}
              validationSchema={validationSchemas}
              onSubmit={handleSubmit}
            >
              {({ touched, errors }) => {
                return (
                  <Form>
                    <div className={mainStyles.inputRow}>
                      <div className={mainStyles.label}>Name</div>
                      <Field name="name" />
                      {errors.name && touched.name ? (
                        <div className={mainStyles.errorMessage}>
                          {errors.name}
                        </div>
                      ) : null}
                    </div>
                    <div className={mainStyles.inputRow}>
                      <div className={mainStyles.label}>Comment</div>
                      <Field name="comment" as="textarea" />
                      {errors.comment && touched.comment ? (
                        <div className={mainStyles.errorMessage}>
                          {errors.comment}
                        </div>
                      ) : null}
                    </div>
                    <Button label="Submit" type="submit" />
                  </Form>
                );
              }}
            </Formik>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Post;
